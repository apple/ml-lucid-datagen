[tool.poetry]
name = "lucid"
version = "0.1.1"
packages = [
  { include = "lucid" },
]
authors = ["Joe Stacey"]
description = "Dataset generation"

[tool.poetry.scripts]
lucid = "LUCID.main:main"

[tool.poetry.dependencies]
Jinja2 = "^3.1.2"
beautifulsoup4 = "^4.11.1"
click = "^8.1.3"
diskcache = "^5.4.0"
docstring-parser = "^0.15"
fastapi = "^0.88.0"
httpx = "^0.23.3"
humps = "^0.2.2"
lark = "^1.1.5"
mongoquery = "^1.4.2"
networkx = "^3.1"
numpy = "^1.23.0"
openai = "0.27.0"
pandas = "^2.0.0"
pyarrow = "^11.0.0"
pydantic = "^1.10.4"
pytest-asyncio = "^0.21.0"
pytest-env = "^0.8.1"
python = ">=3.10,<3.12"
requests = "^2.28.2"
rich = "^12.6.0"
selenium = "^4.7.2"
setuptools = "^67.6.1"
structlog = "^22.3.0"
torch = "1.13.1"
tqdm = "^4.64.1"
transformers = "^4.27.4"
typed-argument-parser = "^1.7.2"
types-requests = "^2.28.11.17"
uvicorn = {extras = ["standard"], version = "^0.20.0"}
webdriver-manager = "^3.8.5"
websockets = "^11.0.3"
matplotlib = "^3.7.1"
astunparse = "^1.6.3"
sentencepiece = "^0.1.99"
gitpython = "^3.1.32"
botocore = "^1.29.78"
boto3 = "^1.7.84"
scipy = "^1.11.1"



[tool.poetry.group.dev.dependencies]
black = "^22.3.0"
coverage = "^6.1.2"
docformatter = "^1.4"
flake8 = "^4.0.1"
flake8-docstrings = "^1.6.0"
ipykernel = "^6.22.0"
isort = "^5.10.1"
lxml = "^4.5.2"
mypy = "^1.4.1"
pre-commit = "^3.2.2"
pydantic-to-typescript = "^1.0.10"
pytest = "^7.3.1"
pytest-cov = "^3.0.0"
types-PyYAML = "^6.0.12.4"
types-setuptools = "^65.6.0.3"

[tool.mypy.exclude]
astunparse = "*"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | messages
  )/
)
'''


[tool.isort]
profile = "black"
line_length = 100
skip = "messages"

[tool.coverage.html]
directory = ".out/htmlcov"

[tool.coverage.run]
source = ["lucid"]
omit = []

[tool.pytest.ini_options]
# Set desired minimum coverage here
addopts = "--cov-fail-under=70 --cov-report html --cov-report term --cov-report xml:.out/coverage.xml"
asyncio_mode = "auto"
env = [
    "OPENAI_API_KEY=dummy"
]
